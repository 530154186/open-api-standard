swagger: '2.0'
info:
  title : Parties schema with custom fields model
  description : This sample showcases a single level custom fields model

  version: 1.0.0
schemes:
  - https
paths:
  /parties/{partyId}:
    get:
      summary: Returns a complete view of a party including custom-fields.
      parameters:
        - $ref: '#/parameters/partyId'
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/party'

  /parties/:
    post:
      summary: Creates a party allowing custom-fields definition
      parameters:
        - $ref: '#/parameters/createParty' 
      responses:
        '200':
          description: Successful Response
  
  /parties/custom-fields-schemas:
    get:
      summary: Returns the schema of theparty custom fields specification.
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/customSchema'

parameters:
  partyId:
    name: partyId
    in: path
    required: true
    type: string
    description: UUID of the party

  createParty:
    name: createParty
    in : body
    schema:
      $ref: '#/definitions/party'

definitions:
  party:
    type: object
    required:
    - lastName
    properties:
      partyId:
        type: string
        readOnly: true

      lastName:
        type: string
        example: Skywalker
      firstName:
        type: string
        example: Luke 
  
      custom-fields:
        type: object
        description : Custom fields defined by the financial institution. The schema and
                      documentation can be found using the associated meta data endpoint
        additionalProperties:
          type: object
          example: { "contact" : { "email" : "luke.skywalker@star.com" , "phone_number": "911"}}
  
  customSchema:
    type: object
    description:  Ths defines the schema of the custom fields that will be returned to the client. The definition is a subset of json schema. Extra properties can be included as required e.g. format, minLength, pattern, etc. In this sample the custom field type and properties are mandatory and the maxLength is included. The example shows how this structure is used 
    required: 
      - type
      - properties
    properties:
      $schema:
        description: Describes which  dialect of JSON Schema this schema was written for - see JSON schema documentation for further details. 
        type: string
      $id:
        description: Used to identify the schema - see JSON schema documentation for further details
        type: string
      type:
        type: string
        description: Defines the type of available fields. Extra field types can be added as required e.g. integer
        enum:
          - object
          - string
          - number      
      description:
        description: Provides a description of the custom fields schema
        type: string
      required:
        description:  Used to state that the custom fields support the 'required' keyword 
        type: array
        items:
          type: string
      maxLength : 
        description:  Used to state that the custom fields support the 'maxLength' keyword
        type : integer
      properties:
        description:  Used to define the custom fields. It has a recursive definition. Note that some fields like $schema should only be used at the top level and not at field level     
        type: object
        additionalProperties:
          $ref: '#/definitions/customSchema'

    example: 
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "$id": "http://example.com/example.json",
        "type": "object",
        "title": "Bank B customization of customer schema",
        "properties": {
          "contact": {
            "$id": "#/properties/custom-fields/properties/contact",
            "type": "object",
            "title": "The contact schema",
            "description": "This represents the contact schema as a custom extension.",
            "required": [
              "email",
            ],
            "properties": {
              "email": {
                "$id": "#/properties/custom-fields/properties/contact/properties/email",
                "type": "string",
                "title": "The email schema",
              },
              "phone_number": {
                "$id": "#/properties/custom-fields/properties/contact/properties/phone_number",
                "type": "string",
                "title": "The phone_number schema",
                "description": "This is the phone_number. this custom fields supports constrains like maxLength",
                "maxLength" : 12
              }
            }
          }
        }
      }
