swagger: '2.0'
info:
  title : Parties schema with custom field model
  description : This sample show case the a single level custom fields model

  version: 1.0.0
schemes:
  - https
paths:
  /parties/{partyId}:
    get:
      summary: returns a complete view of the party, including custom-fields.
      parameters:
        - $ref: '#/parameters/partyId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/party'

  /parties/:
    post:
      summary: create a party following the custom-fields definition
      parameters:
        - $ref: '#/parameters/createParty' 
      responses:
        '200':
          description: Successful response
  
  /parties/custom-field-schemas:
    get:
      summary: returns a the schema of the customized, party specification.
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/customSchema'

parameters:
  partyId:
    name: partyId
    in: path
    required: true
    type: string
    description: UUID of the party.

  createParty:
    name: createParty
    in : body
    schema:
      $ref: '#/definitions/party'

definitions:
  party:
    type: object
    required:
    - lastName
    properties:
      partyId:
        type: string
        readOnly: true

      lastName:
        type: string
        example: Skywalker
      firstName:
        type: string
        example: Luke 
  
      custom-fields:
        type: object
        description : additional fields as defined by the financial institution, schema and
                      documentation can be found using the associated meta data endpoint
        additionalProperties:
          type: object
          example: { "contact" : { "email" : "luke.skywalker@star.com" , "phone_number": "911"}}
  
  customSchema:
    type: object
    description:  this is the meta schema representing a subset of json schema. for instance here format, minLength is not available. Type and properties are mandatory. It is complex to read but short story is that it represents a json schema. 
    required: 
      - type
      - properties
    properties:
      $schema:
        description: schema fields according to json-schema 
        type: string
      $id:
        description: id field according to json-schema
        type: string
      type:
        type: string
        description: subset of json schema specification, here integer is not available 
        enum:
          - object
          - string
          - number      
      description:
        description: allow to setup a description of the custom schema
        type: string
      required:
        description:  this defines that the customization supports the keyword 'required'. That this keyword following json schema semantic must be an array of string            
        type: array
        items:
          type: string
      maxLength : 
        description:  support of maxLength constrains
        type : integer
      properties:
        description:  it is the storage for the fields. It is following a recursive definition. some fields like $schema should be used only at top level, and not field level     
        type: object
        additionalProperties:
          $ref: '#/definitions/customSchema'

          
    example: 
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "$id": "http://example.com/example.json",
        "type": "object",
        "title": "Bank B customization of customer schema",
        "properties": {
          "contact": {
            "$id": "#/properties/custom-fields/properties/contact",
            "type": "object",
            "title": "The contact schema",
            "description": "This represents the contact schema as a custom extension.",
            "required": [
              "email",
            ],
            "properties": {
              "email": {
                "$id": "#/properties/custom-fields/properties/contact/properties/email",
                "type": "string",
                "title": "The email schema",
              },
              "phone_number": {
                "$id": "#/properties/custom-fields/properties/contact/properties/phone_number",
                "type": "string",
                "title": "The phone_number schema",
                "description": "This is the phone_number. this custom fields supports constrains like maxLength",
                "maxLength" : 12
              }
            }
          }
        }
      }
